{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetHidden","reorderedGoods","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","goodsFromServer","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAOKA,E,2FAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAMC,EAAoB,WAC/B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASF,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAiBL,GAAcG,IAAaN,EAASK,KACrDI,EAlCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKN,EAASe,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITf,GACFQ,EAAaQ,UAIfC,QAAQC,IAAIf,EAAUH,GAEfQ,EAOgBW,CACrBC,EAAiB,CAAEjB,WAAUH,eAG/B,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMlB,EAAYP,EAASe,WACpCW,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYrB,IAAaN,EAASe,WALxC,iCAWA,wBACEU,QAAS,kBAAMlB,EAAYP,EAASiB,SACpCS,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYrB,IAAaN,EAASiB,SALxC,4BAWA,wBACEQ,QAAS,kBAAMrB,GAAeD,IAC9BuB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAaxB,IALnB,qBAWCK,GACC,wBACEiB,QAAS,WACPrB,GAAc,GACdG,EAAYP,EAASK,OAEvBqB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGf,EAAemB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.fa920d98.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './data/goodsFromServer.json';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n// To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<{}> = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isResetHidden = (isReversed || sortType !== SortType.NONE);\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.LENGTH)}\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {isResetHidden && (\n          <button\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}